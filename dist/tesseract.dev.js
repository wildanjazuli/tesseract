(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Tesseract"] = factory();
	else
		root["Tesseract"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/is-electron/index.js":
/*!*******************************************!*\
  !*** ./node_modules/is-electron/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// https://github.com/electron/electron/issues/2288\nfunction isElectron() {\n  // Renderer process\n  if (typeof window !== 'undefined' && _typeof(window.process) === 'object' && window.process.type === 'renderer') {\n    return true;\n  } // Main process\n\n\n  if (typeof process !== 'undefined' && _typeof(process.versions) === 'object' && !!process.versions.electron) {\n    return true;\n  } // Detect the user agent when the `nodeIntegration` option is set to true\n\n\n  if ((typeof navigator === \"undefined\" ? \"undefined\" : _typeof(navigator)) === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = isElectron;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://Tesseract/./node_modules/is-electron/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};\n\n//# sourceURL=webpack://Tesseract/./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && _typeof(value) === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n( false ? undefined : _typeof(module)) === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack://Tesseract/./node_modules/regenerator-runtime/runtime.js?");

/***/ }),

/***/ "./node_modules/resolve-url/resolve-url.js":
/*!*************************************************!*\
  !*** ./node_modules/resolve-url/resolve-url.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// Copyright 2014 Simon Lydell\n// X11 (“MIT”) Licensed. (See LICENSE.)\nvoid function (root, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n}(this, function () {\n  function resolveUrl()\n  /* ...urls */\n  {\n    var numUrls = arguments.length;\n\n    if (numUrls === 0) {\n      throw new Error(\"resolveUrl requires at least one argument; got none.\");\n    }\n\n    var base = document.createElement(\"base\");\n    base.href = arguments[0];\n\n    if (numUrls === 1) {\n      return base.href;\n    }\n\n    var head = document.getElementsByTagName(\"head\")[0];\n    head.insertBefore(base, head.firstChild);\n    var a = document.createElement(\"a\");\n    var resolved;\n\n    for (var index = 1; index < numUrls; index++) {\n      a.href = arguments[index];\n      resolved = a.href;\n      base.href = resolved;\n    }\n\n    head.removeChild(base);\n    return resolved;\n  }\n\n  return resolveUrl;\n});\n\n//# sourceURL=webpack://Tesseract/./node_modules/resolve-url/resolve-url.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};\n\n//# sourceURL=webpack://Tesseract/(webpack)/buildin/module.js?");

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! exports provided: name, version, description, main, types, unpkg, jsdelivr, scripts, browser, author, contributors, license, devDependencies, dependencies, repository, bugs, homepage, collective, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"name\\\":\\\"tesseract.js\\\",\\\"version\\\":\\\"2.1.1\\\",\\\"description\\\":\\\"Pure Javascript Multilingual OCR\\\",\\\"main\\\":\\\"src/index.js\\\",\\\"types\\\":\\\"src/index.d.ts\\\",\\\"unpkg\\\":\\\"dist/tesseract.min.js\\\",\\\"jsdelivr\\\":\\\"dist/tesseract.min.js\\\",\\\"scripts\\\":{\\\"start\\\":\\\"node scripts/server.js\\\",\\\"build\\\":\\\"rimraf dist && webpack --config scripts/webpack.config.prod.js\\\",\\\"profile:tesseract\\\":\\\"webpack-bundle-analyzer dist/tesseract-stats.json\\\",\\\"profile:worker\\\":\\\"webpack-bundle-analyzer dist/worker-stats.json\\\",\\\"prepublishOnly\\\":\\\"npm run build\\\",\\\"wait\\\":\\\"rimraf dist && wait-on http://localhost:3000/dist/tesseract.dev.js\\\",\\\"test\\\":\\\"npm-run-all -p -r start test:all\\\",\\\"test:all\\\":\\\"npm-run-all wait test:browser:* test:node:all\\\",\\\"test:node\\\":\\\"nyc mocha --exit --bail --require ./scripts/test-helper.js\\\",\\\"test:node:all\\\":\\\"npm run test:node -- ./tests/*.test.js\\\",\\\"test:browser-tpl\\\":\\\"mocha-headless-chrome -a incognito -a no-sandbox -a disable-setuid-sandbox -a disable-logging -t 300000\\\",\\\"test:browser:detect\\\":\\\"npm run test:browser-tpl -- -f ./tests/detect.test.html\\\",\\\"test:browser:recognize\\\":\\\"npm run test:browser-tpl -- -f ./tests/recognize.test.html\\\",\\\"test:browser:scheduler\\\":\\\"npm run test:browser-tpl -- -f ./tests/scheduler.test.html\\\",\\\"test:browser:FS\\\":\\\"npm run test:browser-tpl -- -f ./tests/FS.test.html\\\",\\\"lint\\\":\\\"eslint src\\\",\\\"postinstall\\\":\\\"opencollective-postinstall || true\\\"},\\\"browser\\\":{\\\"./src/worker/node/index.js\\\":\\\"./src/worker/browser/index.js\\\"},\\\"author\\\":\\\"\\\",\\\"contributors\\\":[\\\"jeromewu\\\"],\\\"license\\\":\\\"Apache-2.0\\\",\\\"devDependencies\\\":{\\\"@babel/core\\\":\\\"^7.7.7\\\",\\\"@babel/preset-env\\\":\\\"^7.7.7\\\",\\\"acorn\\\":\\\"^6.4.0\\\",\\\"babel-loader\\\":\\\"^8.0.6\\\",\\\"cors\\\":\\\"^2.8.5\\\",\\\"eslint\\\":\\\"^5.16.0\\\",\\\"eslint-config-airbnb\\\":\\\"^17.1.1\\\",\\\"eslint-plugin-import\\\":\\\"^2.19.1\\\",\\\"eslint-plugin-jsx-a11y\\\":\\\"^6.2.3\\\",\\\"eslint-plugin-react\\\":\\\"^7.17.0\\\",\\\"expect.js\\\":\\\"^0.3.1\\\",\\\"express\\\":\\\"^4.17.1\\\",\\\"mocha\\\":\\\"^5.2.0\\\",\\\"mocha-headless-chrome\\\":\\\"^2.0.3\\\",\\\"npm-run-all\\\":\\\"^4.1.5\\\",\\\"nyc\\\":\\\"^15.0.0\\\",\\\"rimraf\\\":\\\"^2.7.1\\\",\\\"wait-on\\\":\\\"^3.3.0\\\",\\\"webpack\\\":\\\"^4.41.4\\\",\\\"webpack-bundle-analyzer\\\":\\\"^3.6.0\\\",\\\"webpack-cli\\\":\\\"^3.3.10\\\",\\\"webpack-dev-middleware\\\":\\\"^3.7.2\\\"},\\\"dependencies\\\":{\\\"bmp-js\\\":\\\"^0.1.0\\\",\\\"file-type\\\":\\\"^12.4.1\\\",\\\"idb-keyval\\\":\\\"^3.2.0\\\",\\\"is-electron\\\":\\\"^2.2.0\\\",\\\"is-url\\\":\\\"^1.2.4\\\",\\\"node-fetch\\\":\\\"^2.6.0\\\",\\\"opencollective-postinstall\\\":\\\"^2.0.2\\\",\\\"regenerator-runtime\\\":\\\"^0.13.3\\\",\\\"resolve-url\\\":\\\"^0.2.1\\\",\\\"tesseract.js-core\\\":\\\"^2.2.0\\\",\\\"zlibjs\\\":\\\"^0.3.1\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/naptha/tesseract.js.git\\\"},\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/naptha/tesseract.js/issues\\\"},\\\"homepage\\\":\\\"https://github.com/naptha/tesseract.js\\\",\\\"collective\\\":{\\\"type\\\":\\\"opencollective\\\",\\\"url\\\":\\\"https://opencollective.com/tesseractjs\\\"}}\");\n\n//# sourceURL=webpack://Tesseract/./package.json?");

/***/ }),

/***/ "./src/Tesseract.js":
/*!**************************!*\
  !*** ./src/Tesseract.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar createWorker = __webpack_require__(/*! ./createWorker */ \"./src/createWorker.js\");\n\nvar recognize =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(image, langs, options) {\n    var worker;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            worker = createWorker(options);\n            _context2.next = 3;\n            return worker.load();\n\n          case 3:\n            _context2.next = 5;\n            return worker.loadLanguage(langs);\n\n          case 5:\n            _context2.next = 7;\n            return worker.initialize(langs);\n\n          case 7:\n            return _context2.abrupt(\"return\", worker.recognize(image).finally(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee() {\n              return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return worker.terminate();\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }))));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function recognize(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar detect =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(image, options) {\n    var worker;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            worker = createWorker(options);\n            _context4.next = 3;\n            return worker.load();\n\n          case 3:\n            _context4.next = 5;\n            return worker.loadLanguage('osd');\n\n          case 5:\n            _context4.next = 7;\n            return worker.initialize('osd');\n\n          case 7:\n            return _context4.abrupt(\"return\", worker.detect(image).finally(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee3() {\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return worker.terminate();\n\n                    case 2:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }))));\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function detect(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  recognize: recognize,\n  detect: detect\n};\n\n//# sourceURL=webpack://Tesseract/./src/Tesseract.js?");

/***/ }),

/***/ "./src/constants/OEM.js":
/*!******************************!*\
  !*** ./src/constants/OEM.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n * OEM = OCR Engine Mode, and there are 4 possible modes.\n *\n * By default tesseract.js uses LSTM_ONLY mode.\n *\n */\nmodule.exports = {\n  TESSERACT_ONLY: 0,\n  LSTM_ONLY: 1,\n  TESSERACT_LSTM_COMBINED: 2,\n  DEFAULT: 3\n};\n\n//# sourceURL=webpack://Tesseract/./src/constants/OEM.js?");

/***/ }),

/***/ "./src/constants/PSM.js":
/*!******************************!*\
  !*** ./src/constants/PSM.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n * PSM = Page Segmentation Mode\n */\nmodule.exports = {\n  OSD_ONLY: '0',\n  AUTO_OSD: '1',\n  AUTO_ONLY: '2',\n  AUTO: '3',\n  SINGLE_COLUMN: '4',\n  SINGLE_BLOCK_VERT_TEXT: '5',\n  SINGLE_BLOCK: '6',\n  SINGLE_LINE: '7',\n  SINGLE_WORD: '8',\n  CIRCLE_WORD: '9',\n  SINGLE_CHAR: '10',\n  SPARSE_TEXT: '11',\n  SPARSE_TEXT_OSD: '12'\n};\n\n//# sourceURL=webpack://Tesseract/./src/constants/PSM.js?");

/***/ }),

/***/ "./src/constants/config.js":
/*!*********************************!*\
  !*** ./src/constants/config.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var OEM = __webpack_require__(/*! ./OEM */ \"./src/constants/OEM.js\");\n\nmodule.exports = {\n  defaultOEM: OEM.DEFAULT\n};\n\n//# sourceURL=webpack://Tesseract/./src/constants/config.js?");

/***/ }),

/***/ "./src/constants/defaultOptions.js":
/*!*****************************************!*\
  !*** ./src/constants/defaultOptions.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  /*\n   * default path for downloading *.traineddata\n   */\n  langPath: 'https://tessdata.projectnaptha.com/4.0.0',\n\n  /*\n   * Use BlobURL for worker script by default\n   * TODO: remove this option\n   *\n   */\n  workerBlobURL: true,\n  logger: function logger() {}\n};\n\n//# sourceURL=webpack://Tesseract/./src/constants/defaultOptions.js?");

/***/ }),

/***/ "./src/createJob.js":
/*!**************************!*\
  !*** ./src/createJob.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getId = __webpack_require__(/*! ./utils/getId */ \"./src/utils/getId.js\");\n\nvar jobCounter = 0;\n\nmodule.exports = function (_ref) {\n  var _id = _ref.id,\n      action = _ref.action,\n      _ref$payload = _ref.payload,\n      payload = _ref$payload === void 0 ? {} : _ref$payload;\n  var id = _id;\n\n  if (typeof id === 'undefined') {\n    id = getId('Job', jobCounter);\n    jobCounter += 1;\n  }\n\n  return {\n    id: id,\n    action: action,\n    payload: payload\n  };\n};\n\n//# sourceURL=webpack://Tesseract/./src/createJob.js?");

/***/ }),

/***/ "./src/createScheduler.js":
/*!********************************!*\
  !*** ./src/createScheduler.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _this = this;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar createJob = __webpack_require__(/*! ./createJob */ \"./src/createJob.js\");\n\nvar _require = __webpack_require__(/*! ./utils/log */ \"./src/utils/log.js\"),\n    log = _require.log;\n\nvar getId = __webpack_require__(/*! ./utils/getId */ \"./src/utils/getId.js\");\n\nvar schedulerCounter = 0;\n\nmodule.exports = function () {\n  var id = getId('Scheduler', schedulerCounter);\n  var workers = {};\n  var runningWorkers = {};\n  var jobQueue = [];\n  schedulerCounter += 1;\n\n  var getQueueLen = function getQueueLen() {\n    return jobQueue.length;\n  };\n\n  var getNumWorkers = function getNumWorkers() {\n    return Object.keys(workers).length;\n  };\n\n  var dequeue = function dequeue() {\n    if (jobQueue.length !== 0) {\n      var wIds = Object.keys(workers);\n\n      for (var i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n\n  var queue = function queue(action, payload) {\n    return new Promise(function (resolve, reject) {\n      var job = createJob({\n        action: action,\n        payload: payload\n      });\n      jobQueue.push(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(w) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  jobQueue.shift();\n                  runningWorkers[w.id] = job;\n                  _context.prev = 2;\n                  _context.t0 = resolve;\n                  _context.next = 6;\n                  return w[action].apply(_this, [].concat(_toConsumableArray(payload), [job.id]));\n\n                case 6:\n                  _context.t1 = _context.sent;\n                  (0, _context.t0)(_context.t1);\n                  _context.next = 13;\n                  break;\n\n                case 10:\n                  _context.prev = 10;\n                  _context.t2 = _context[\"catch\"](2);\n                  reject(_context.t2);\n\n                case 13:\n                  _context.prev = 13;\n                  delete runningWorkers[w.id];\n                  dequeue();\n                  return _context.finish(13);\n\n                case 17:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[2, 10, 13, 17]]);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n      log(\"[\".concat(id, \"]: Add \").concat(job.id, \" to JobQueue\"));\n      log(\"[\".concat(id, \"]: JobQueue length=\").concat(jobQueue.length));\n      dequeue();\n    });\n  };\n\n  var addWorker = function addWorker(w) {\n    workers[w.id] = w;\n    log(\"[\".concat(id, \"]: Add \").concat(w.id));\n    log(\"[\".concat(id, \"]: Number of workers=\").concat(getNumWorkers()));\n    dequeue();\n    return w.id;\n  };\n\n  var addJob =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(action) {\n      var _len,\n          payload,\n          _key,\n          _args2 = arguments;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(getNumWorkers() === 0)) {\n                _context2.next = 2;\n                break;\n              }\n\n              throw Error(\"[\".concat(id, \"]: You need to have at least one worker before adding jobs\"));\n\n            case 2:\n              for (_len = _args2.length, payload = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                payload[_key - 1] = _args2[_key];\n              }\n\n              return _context2.abrupt(\"return\", queue(action, payload));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function addJob(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var terminate =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4() {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              Object.keys(workers).forEach(\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee3(wid) {\n                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return workers[wid].terminate();\n\n                        case 2:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x3) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n              jobQueue = [];\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function terminate() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return {\n    addWorker: addWorker,\n    addJob: addJob,\n    terminate: terminate,\n    getQueueLen: getQueueLen,\n    getNumWorkers: getNumWorkers\n  };\n};\n\n//# sourceURL=webpack://Tesseract/./src/createScheduler.js?");

/***/ }),

/***/ "./src/createWorker.js":
/*!*****************************!*\
  !*** ./src/createWorker.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar resolvePaths = __webpack_require__(/*! ./utils/resolvePaths */ \"./src/utils/resolvePaths.js\");\n\nvar circularize = __webpack_require__(/*! ./utils/circularize */ \"./src/utils/circularize.js\");\n\nvar createJob = __webpack_require__(/*! ./createJob */ \"./src/createJob.js\");\n\nvar _require = __webpack_require__(/*! ./utils/log */ \"./src/utils/log.js\"),\n    log = _require.log;\n\nvar getId = __webpack_require__(/*! ./utils/getId */ \"./src/utils/getId.js\");\n\nvar _require2 = __webpack_require__(/*! ./constants/config */ \"./src/constants/config.js\"),\n    defaultOEM = _require2.defaultOEM;\n\nvar _require3 = __webpack_require__(/*! ./worker/node */ \"./src/worker/browser/index.js\"),\n    defaultOptions = _require3.defaultOptions,\n    spawnWorker = _require3.spawnWorker,\n    terminateWorker = _require3.terminateWorker,\n    onMessage = _require3.onMessage,\n    loadImage = _require3.loadImage,\n    send = _require3.send;\n\nvar workerCounter = 0;\n\nmodule.exports = function () {\n  var _options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var id = getId('Worker', workerCounter);\n\n  var _resolvePaths = resolvePaths(_objectSpread({}, defaultOptions, {}, _options)),\n      logger = _resolvePaths.logger,\n      errorHandler = _resolvePaths.errorHandler,\n      options = _objectWithoutProperties(_resolvePaths, [\"logger\", \"errorHandler\"]);\n\n  var resolves = {};\n  var rejects = {};\n  var worker = spawnWorker(options);\n  workerCounter += 1;\n\n  var setResolve = function setResolve(action, res) {\n    resolves[action] = res;\n  };\n\n  var setReject = function setReject(action, rej) {\n    rejects[action] = rej;\n  };\n\n  var startJob = function startJob(_ref) {\n    var jobId = _ref.id,\n        action = _ref.action,\n        payload = _ref.payload;\n    return new Promise(function (resolve, reject) {\n      log(\"[\".concat(id, \"]: Start \").concat(jobId, \", action=\").concat(action));\n      setResolve(action, resolve);\n      setReject(action, reject);\n      send(worker, {\n        workerId: id,\n        jobId: jobId,\n        action: action,\n        payload: payload\n      });\n    });\n  };\n\n  var load = function load(jobId) {\n    return startJob(createJob({\n      id: jobId,\n      action: 'load',\n      payload: {\n        options: options\n      }\n    }));\n  };\n\n  var writeText = function writeText(path, text, jobId) {\n    return startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: {\n        method: 'writeFile',\n        args: [path, text]\n      }\n    }));\n  };\n\n  var readText = function readText(path, jobId) {\n    return startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: {\n        method: 'readFile',\n        args: [path, {\n          encoding: 'utf8'\n        }]\n      }\n    }));\n  };\n\n  var removeFile = function removeFile(path, jobId) {\n    return startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: {\n        method: 'unlink',\n        args: [path]\n      }\n    }));\n  };\n\n  var FS = function FS(method, args, jobId) {\n    return startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: {\n        method: method,\n        args: args\n      }\n    }));\n  };\n\n  var loadLanguage = function loadLanguage() {\n    var langs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'eng';\n    var jobId = arguments.length > 1 ? arguments[1] : undefined;\n    return startJob(createJob({\n      id: jobId,\n      action: 'loadLanguage',\n      payload: {\n        langs: langs,\n        options: options\n      }\n    }));\n  };\n\n  var initialize = function initialize() {\n    var langs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'eng';\n    var oem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOEM;\n    var jobId = arguments.length > 2 ? arguments[2] : undefined;\n    return startJob(createJob({\n      id: jobId,\n      action: 'initialize',\n      payload: {\n        langs: langs,\n        oem: oem\n      }\n    }));\n  };\n\n  var setParameters = function setParameters() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var jobId = arguments.length > 1 ? arguments[1] : undefined;\n    return startJob(createJob({\n      id: jobId,\n      action: 'setParameters',\n      payload: {\n        params: params\n      }\n    }));\n  };\n\n  var recognize =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(image) {\n      var opts,\n          jobId,\n          _args = arguments;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              opts = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              jobId = _args.length > 2 ? _args[2] : undefined;\n              _context.t0 = startJob;\n              _context.t1 = createJob;\n              _context.t2 = jobId;\n              _context.next = 7;\n              return loadImage(image);\n\n            case 7:\n              _context.t3 = _context.sent;\n              _context.t4 = opts;\n              _context.t5 = {\n                image: _context.t3,\n                options: _context.t4\n              };\n              _context.t6 = {\n                id: _context.t2,\n                action: 'recognize',\n                payload: _context.t5\n              };\n              _context.t7 = (0, _context.t1)(_context.t6);\n              return _context.abrupt(\"return\", (0, _context.t0)(_context.t7));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function recognize(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getPDF = function getPDF() {\n    var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Tesseract OCR Result';\n    var textonly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var jobId = arguments.length > 2 ? arguments[2] : undefined;\n    return startJob(createJob({\n      id: jobId,\n      action: 'getPDF',\n      payload: {\n        title: title,\n        textonly: textonly\n      }\n    }));\n  };\n\n  var detect =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(image, jobId) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = startJob;\n              _context2.t1 = createJob;\n              _context2.t2 = jobId;\n              _context2.next = 5;\n              return loadImage(image);\n\n            case 5:\n              _context2.t3 = _context2.sent;\n              _context2.t4 = {\n                image: _context2.t3\n              };\n              _context2.t5 = {\n                id: _context2.t2,\n                action: 'detect',\n                payload: _context2.t4\n              };\n              _context2.t6 = (0, _context2.t1)(_context2.t5);\n              return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t6));\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function detect(_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var terminate =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (worker !== null) {\n                /*\n                await startJob(createJob({\n                  id: jobId,\n                  action: 'terminate',\n                }));\n                */\n                terminateWorker(worker);\n                worker = null;\n              }\n\n              return _context3.abrupt(\"return\", Promise.resolve());\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function terminate() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  onMessage(worker, function (_ref5) {\n    var workerId = _ref5.workerId,\n        jobId = _ref5.jobId,\n        status = _ref5.status,\n        action = _ref5.action,\n        data = _ref5.data;\n\n    if (status === 'resolve') {\n      log(\"[\".concat(workerId, \"]: Complete \").concat(jobId));\n      var d = data;\n\n      if (action === 'recognize') {\n        d = circularize(data);\n      } else if (action === 'getPDF') {\n        d = Array.from(_objectSpread({}, data, {\n          length: Object.keys(data).length\n        }));\n      }\n\n      resolves[action]({\n        jobId: jobId,\n        data: d\n      });\n    } else if (status === 'reject') {\n      rejects[action](data);\n\n      if (errorHandler) {\n        errorHandler(data);\n      } else {\n        throw Error(data);\n      }\n    } else if (status === 'progress') {\n      logger(data);\n    }\n  });\n  return {\n    id: id,\n    worker: worker,\n    setResolve: setResolve,\n    setReject: setReject,\n    load: load,\n    writeText: writeText,\n    readText: readText,\n    removeFile: removeFile,\n    FS: FS,\n    loadLanguage: loadLanguage,\n    initialize: initialize,\n    setParameters: setParameters,\n    recognize: recognize,\n    getPDF: getPDF,\n    detect: detect,\n    terminate: terminate\n  };\n};\n\n//# sourceURL=webpack://Tesseract/./src/createWorker.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n *\n * Entry point for tesseract.js, should be the entry when bundling.\n *\n * @fileoverview entry point for tesseract.js\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\n__webpack_require__(/*! regenerator-runtime/runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\nvar createScheduler = __webpack_require__(/*! ./createScheduler */ \"./src/createScheduler.js\");\n\nvar createWorker = __webpack_require__(/*! ./createWorker */ \"./src/createWorker.js\");\n\nvar Tesseract = __webpack_require__(/*! ./Tesseract */ \"./src/Tesseract.js\");\n\nvar OEM = __webpack_require__(/*! ./constants/OEM */ \"./src/constants/OEM.js\");\n\nvar PSM = __webpack_require__(/*! ./constants/PSM */ \"./src/constants/PSM.js\");\n\nvar _require = __webpack_require__(/*! ./utils/log */ \"./src/utils/log.js\"),\n    setLogging = _require.setLogging;\n\nmodule.exports = _objectSpread({\n  OEM: OEM,\n  PSM: PSM,\n  createScheduler: createScheduler,\n  createWorker: createWorker,\n  setLogging: setLogging\n}, Tesseract);\n\n//# sourceURL=webpack://Tesseract/./src/index.js?");

/***/ }),

/***/ "./src/utils/circularize.js":
/*!**********************************!*\
  !*** ./src/utils/circularize.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * In the recognition result of tesseract, there\n * is a deep JSON object for details, it has around\n *\n * The result of dump.js is a big JSON tree\n * which can be easily serialized (for instance\n * to be sent from a webworker to the main app\n * or through Node's IPC), but we want\n * a (circular) DOM-like interface for walking\n * through the data.\n *\n * @fileoverview DOM-like interface for walking through data\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nmodule.exports = function (page) {\n  var blocks = [];\n  var paragraphs = [];\n  var lines = [];\n  var words = [];\n  var symbols = [];\n  page.blocks.forEach(function (block) {\n    block.paragraphs.forEach(function (paragraph) {\n      paragraph.lines.forEach(function (line) {\n        line.words.forEach(function (word) {\n          word.symbols.forEach(function (sym) {\n            symbols.push(_objectSpread({}, sym, {\n              page: page,\n              block: block,\n              paragraph: paragraph,\n              line: line,\n              word: word\n            }));\n          });\n          words.push(_objectSpread({}, word, {\n            page: page,\n            block: block,\n            paragraph: paragraph,\n            line: line\n          }));\n        });\n        lines.push(_objectSpread({}, line, {\n          page: page,\n          block: block,\n          paragraph: paragraph\n        }));\n      });\n      paragraphs.push(_objectSpread({}, paragraph, {\n        page: page,\n        block: block\n      }));\n    });\n    blocks.push(_objectSpread({}, block, {\n      page: page\n    }));\n  });\n  return _objectSpread({}, page, {\n    blocks: blocks,\n    paragraphs: paragraphs,\n    lines: lines,\n    words: words,\n    symbols: symbols\n  });\n};\n\n//# sourceURL=webpack://Tesseract/./src/utils/circularize.js?");

/***/ }),

/***/ "./src/utils/getEnvironment.js":
/*!*************************************!*\
  !*** ./src/utils/getEnvironment.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar isElectron = __webpack_require__(/*! is-electron */ \"./node_modules/is-electron/index.js\");\n\nmodule.exports = function (key) {\n  var env = {};\n\n  if (isElectron()) {\n    env.type = 'electron';\n  } else if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object') {\n    env.type = 'browser';\n  } else if (typeof importScripts === 'function') {\n    env.type = 'webworker';\n  } else if ((typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === 'object' && \"function\" === 'function') {\n    env.type = 'node';\n  }\n\n  if (typeof key === 'undefined') {\n    return env;\n  }\n\n  return env[key];\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://Tesseract/./src/utils/getEnvironment.js?");

/***/ }),

/***/ "./src/utils/getId.js":
/*!****************************!*\
  !*** ./src/utils/getId.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (prefix, cnt) {\n  return \"\".concat(prefix, \"-\").concat(cnt, \"-\").concat(Math.random().toString(16).slice(3, 8));\n};\n\n//# sourceURL=webpack://Tesseract/./src/utils/getId.js?");

/***/ }),

/***/ "./src/utils/log.js":
/*!**************************!*\
  !*** ./src/utils/log.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var _this = this;\n\nvar logging = false;\nexports.logging = logging;\n\nexports.setLogging = function (_logging) {\n  logging = _logging;\n};\n\nexports.log = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return logging ? console.log.apply(_this, args) : null;\n};\n\n//# sourceURL=webpack://Tesseract/./src/utils/log.js?");

/***/ }),

/***/ "./src/utils/resolvePaths.js":
/*!***********************************!*\
  !*** ./src/utils/resolvePaths.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar isBrowser = __webpack_require__(/*! ./getEnvironment */ \"./src/utils/getEnvironment.js\")('type') === 'browser';\nvar resolveURL = isBrowser ? __webpack_require__(/*! resolve-url */ \"./node_modules/resolve-url/resolve-url.js\") : function (s) {\n  return s;\n}; // eslint-disable-line\n\nmodule.exports = function (options) {\n  var opts = _objectSpread({}, options);\n\n  ['corePath', 'workerPath', 'langPath'].forEach(function (key) {\n    if (typeof options[key] !== 'undefined') {\n      opts[key] = resolveURL(opts[key]);\n    }\n  });\n  return opts;\n};\n\n//# sourceURL=webpack://Tesseract/./src/utils/resolvePaths.js?");

/***/ }),

/***/ "./src/worker/browser/defaultOptions.js":
/*!**********************************************!*\
  !*** ./src/worker/browser/defaultOptions.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar resolveURL = __webpack_require__(/*! resolve-url */ \"./node_modules/resolve-url/resolve-url.js\");\n\nvar _require = __webpack_require__(/*! ../../../package.json */ \"./package.json\"),\n    version = _require.version,\n    dependencies = _require.dependencies;\n\nvar defaultOptions = __webpack_require__(/*! ../../constants/defaultOptions */ \"./src/constants/defaultOptions.js\");\n/*\n * Default options for browser worker\n */\n\n\nmodule.exports = _objectSpread({}, defaultOptions, {\n  workerPath: typeof process !== 'undefined' && \"development\" === 'development' ? resolveURL(\"/dist/worker.dev.js?nocache=\".concat(Math.random().toString(36).slice(3))) : \"https://unpkg.com/tesseract.js@v\".concat(version, \"/dist/worker.min.js\"),\n\n  /*\n   * If browser doesn't support WebAssembly,\n   * load ASM version instead\n   */\n  corePath: \"https://unpkg.com/tesseract.js-core@v\".concat(dependencies['tesseract.js-core'].substring(1), \"/tesseract-core.\").concat((typeof WebAssembly === \"undefined\" ? \"undefined\" : _typeof(WebAssembly)) === 'object' ? 'wasm' : 'asm', \".js\")\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://Tesseract/./src/worker/browser/defaultOptions.js?");

/***/ }),

/***/ "./src/worker/browser/index.js":
/*!*************************************!*\
  !*** ./src/worker/browser/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n *\n * Tesseract Worker adapter for browser\n *\n * @fileoverview Tesseract Worker adapter for browser\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nvar defaultOptions = __webpack_require__(/*! ./defaultOptions */ \"./src/worker/browser/defaultOptions.js\");\n\nvar spawnWorker = __webpack_require__(/*! ./spawnWorker */ \"./src/worker/browser/spawnWorker.js\");\n\nvar terminateWorker = __webpack_require__(/*! ./terminateWorker */ \"./src/worker/browser/terminateWorker.js\");\n\nvar onMessage = __webpack_require__(/*! ./onMessage */ \"./src/worker/browser/onMessage.js\");\n\nvar send = __webpack_require__(/*! ./send */ \"./src/worker/browser/send.js\");\n\nvar loadImage = __webpack_require__(/*! ./loadImage */ \"./src/worker/browser/loadImage.js\");\n\nmodule.exports = {\n  defaultOptions: defaultOptions,\n  spawnWorker: spawnWorker,\n  terminateWorker: terminateWorker,\n  onMessage: onMessage,\n  send: send,\n  loadImage: loadImage\n};\n\n//# sourceURL=webpack://Tesseract/./src/worker/browser/index.js?");

/***/ }),

/***/ "./src/worker/browser/loadImage.js":
/*!*****************************************!*\
  !*** ./src/worker/browser/loadImage.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar resolveURL = __webpack_require__(/*! resolve-url */ \"./node_modules/resolve-url/resolve-url.js\");\n/**\n * readFromBlobOrFile\n *\n * @name readFromBlobOrFile\n * @function\n * @access private\n */\n\n\nvar readFromBlobOrFile = function readFromBlobOrFile(blob) {\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n\n    fileReader.onload = function () {\n      resolve(fileReader.result);\n    };\n\n    fileReader.onerror = function (_ref) {\n      var code = _ref.target.error.code;\n      reject(Error(\"File could not be read! Code=\".concat(code)));\n    };\n\n    fileReader.readAsArrayBuffer(blob);\n  });\n};\n/**\n * loadImage\n *\n * @name loadImage\n * @function load image from different source\n * @access private\n */\n\n\nvar loadImage =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(image) {\n    var data, resp;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = image;\n\n            if (!(typeof image === 'undefined')) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", 'undefined');\n\n          case 3:\n            if (!(typeof image === 'string')) {\n              _context2.next = 16;\n              break;\n            }\n\n            if (!/data:image\\/([a-zA-Z]*);base64,([^\"]*)/.test(image)) {\n              _context2.next = 8;\n              break;\n            }\n\n            data = atob(image.split(',')[1]).split('').map(function (c) {\n              return c.charCodeAt(0);\n            });\n            _context2.next = 14;\n            break;\n\n          case 8:\n            _context2.next = 10;\n            return fetch(resolveURL(image));\n\n          case 10:\n            resp = _context2.sent;\n            _context2.next = 13;\n            return resp.arrayBuffer();\n\n          case 13:\n            data = _context2.sent;\n\n          case 14:\n            _context2.next = 34;\n            break;\n\n          case 16:\n            if (!(image instanceof HTMLElement)) {\n              _context2.next = 30;\n              break;\n            }\n\n            if (!(image.tagName === 'IMG')) {\n              _context2.next = 21;\n              break;\n            }\n\n            _context2.next = 20;\n            return loadImage(image.src);\n\n          case 20:\n            data = _context2.sent;\n\n          case 21:\n            if (!(image.tagName === 'VIDEO')) {\n              _context2.next = 25;\n              break;\n            }\n\n            _context2.next = 24;\n            return loadImage(image.poster);\n\n          case 24:\n            data = _context2.sent;\n\n          case 25:\n            if (!(image.tagName === 'CANVAS')) {\n              _context2.next = 28;\n              break;\n            }\n\n            _context2.next = 28;\n            return new Promise(function (resolve) {\n              image.toBlob(\n              /*#__PURE__*/\n              function () {\n                var _ref3 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee(blob) {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return readFromBlobOrFile(blob);\n\n                        case 2:\n                          data = _context.sent;\n                          resolve();\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n            });\n\n          case 28:\n            _context2.next = 34;\n            break;\n\n          case 30:\n            if (!(image instanceof File || image instanceof Blob)) {\n              _context2.next = 34;\n              break;\n            }\n\n            _context2.next = 33;\n            return readFromBlobOrFile(image);\n\n          case 33:\n            data = _context2.sent;\n\n          case 34:\n            return _context2.abrupt(\"return\", new Uint8Array(data));\n\n          case 35:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function loadImage(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports = loadImage;\n\n//# sourceURL=webpack://Tesseract/./src/worker/browser/loadImage.js?");

/***/ }),

/***/ "./src/worker/browser/onMessage.js":
/*!*****************************************!*\
  !*** ./src/worker/browser/onMessage.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (worker, handler) {\n  worker.onmessage = function (_ref) {\n    var data = _ref.data;\n    // eslint-disable-line\n    handler(data);\n  };\n};\n\n//# sourceURL=webpack://Tesseract/./src/worker/browser/onMessage.js?");

/***/ }),

/***/ "./src/worker/browser/send.js":
/*!************************************!*\
  !*** ./src/worker/browser/send.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * send\n *\n * @name send\n * @function send packet to worker and create a job\n * @access public\n */\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(worker, packet) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            worker.postMessage(packet);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n//# sourceURL=webpack://Tesseract/./src/worker/browser/send.js?");

/***/ }),

/***/ "./src/worker/browser/spawnWorker.js":
/*!*******************************************!*\
  !*** ./src/worker/browser/spawnWorker.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * spawnWorker\n *\n * @name spawnWorker\n * @function create a new Worker in browser\n * @access public\n */\nmodule.exports = function (_ref) {\n  var workerPath = _ref.workerPath,\n      workerBlobURL = _ref.workerBlobURL;\n  var worker;\n\n  if (Blob && URL && workerBlobURL) {\n    var blob = new Blob([\"importScripts(\\\"\".concat(workerPath, \"\\\");\")], {\n      type: 'application/javascript'\n    });\n    worker = new Worker(URL.createObjectURL(blob));\n  } else {\n    worker = new Worker(workerPath);\n  }\n\n  return worker;\n};\n\n//# sourceURL=webpack://Tesseract/./src/worker/browser/spawnWorker.js?");

/***/ }),

/***/ "./src/worker/browser/terminateWorker.js":
/*!***********************************************!*\
  !*** ./src/worker/browser/terminateWorker.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * terminateWorker\n *\n * @name terminateWorker\n * @function terminate worker\n * @access public\n */\nmodule.exports = function (worker) {\n  worker.terminate();\n};\n\n//# sourceURL=webpack://Tesseract/./src/worker/browser/terminateWorker.js?");

/***/ })

/******/ });
});